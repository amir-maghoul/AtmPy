#name: Python Package using Conda
#
#on: [push]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 5
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: '3.12'
#    - name: Add conda to system path
#      run: |
#        # $CONDA is an environment variable pointing to the root of the miniconda directory
#        echo $CONDA/bin >> $GITHUB_PATH
#    - name: Install dependencies
#      run: |
#        conda env update --file environment.yml --name base
#    - name: Formatting Suite [flake8 and black]
#      run: |
#        # Pipeline failure with Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F8 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#        # Pipeline failure with black errors
#        black --check --exclude /docs .
#  Test Suite:
#    - name: Test Suite [pytest]
#      needs: Python Suite
#      run: |
#        pip install pytest-cov
#        pytest
#  Docs Suite:
#    - name: Docs Suite [sphinx]
#      needs: Python Suite
#      run: |
#        cd docs
#        make html
#    - name: Upload documentation artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: sphinx-docs
#        path: docs/_build/html/
#  Deploy:
#    runs-on: ubuntu-latest
#    needs: Python Suite
#    if: github.ref == 'refs/heads/main'
#    permissions:
#      contents: write
#
#    steps:
#    - name: Checkout repository
#      uses: actions/checkout@v3
#
#    - name: Download documentation artifacts
#      uses: actions/download-artifact@v3
#      with:
#        name: sphinx-docs
#        path: docs/_build/html
#
#    - name: Deploy to GitHub Pages
#      uses: peaceiris/actions-gh-pages@v3
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
##        personal_token: ${{ secrets.PERSONAL_TOKEN }}
#        publish_dir: docs/_build/html

name: Python Package using Conda

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12'
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: '3.12'
    - name: Cache conda environment
      uses: actions/cache@v3
      with:
        path: ~/conda_env
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: ${{ runner.os }}-conda
    - name: Install dependencies
      run: |
        conda env create --prefix ~/conda_env --file environment.yml
        echo "CONDA_PREFIX=~/conda_env" >> $GITHUB_ENV
    - name: Formatting Suite [flake8 and black]
      run: |
        source activate ~/conda_env
        flake8 . --count --select=E9,F63,F7,F8 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        black --check --exclude /docs .

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Restore conda environment from cache
      uses: actions/cache@v3
      with:
        path: ~/conda_env
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: ${{ runner.os }}-conda
    - name: Test Suite [pytest]
      run: |
        source activate ~/conda_env
        pip install pytest-cov
        pytest

  docs:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: Restore conda environment from cache
      uses: actions/cache@v3
      with:
        path: ~/conda_env
        key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
        restore-keys: ${{ runner.os }}-conda
    - name: Docs Suite [sphinx]
      run: |
        source activate ~/conda_env
        cd docs
        make html
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v2
      with:
        name: sphinx-docs
        path: docs/_build/html/

  deploy:
    runs-on: ubuntu-latest
    needs: docs
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Download documentation artifacts
      uses: actions/download-artifact@v3
      with:
        name: sphinx-docs
        path: docs/_build/html
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html


